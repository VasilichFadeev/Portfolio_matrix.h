Run tests:


21 School


VERTER is watching your code...Â¯\_(*_*)_/Â¯

-------------------------------------------------------------------------------

Style test

Style test output:
 Style test: OK
1
Style test result: 1
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------

Part: matrix

Build output:
 gcc -Wall -Wextra -Werror -std=c11 -c functions/s21_calc_complements.c functions/s21_create_matrix.c functions/s21_determinant.c functions/s21_eq_matrix.c functions/s21_get_minor.c functions/s21_inverse_matrix.c functions/s21_mult_matrix.c functions/s21_mult_number.c functions/s21_remove_matrix.c functions/s21_sub_matrix.c functions/s21_sum_matrix.c functions/s21_transpose.c
ar rcs s21_matrix.a *.o
rm -f *.o
gcc -c test_matrix.c
gcc -c main.c
gcc -o unit_test test_matrix.o main.o ../../src/s21_matrix.a -lm

Project build: OK
1
Build result: 1
-------------------------------------------------------------------------------

Test number: 0, name: eq_matrix

Test output:
Functional test output: True
Memory test output:
==152== Memcheck, a memory error detector
==152== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==152== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==152== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test eq_matrix
==152== 
==152== 
==152== HEAP SUMMARY:
==152==     in use at exit: 0 bytes in 0 blocks
==152==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==152== 
==152== All heap blocks were freed -- no leaks are possible
==152== 
==152== For lists of detected and suppressed errors, rerun with: -s
==152== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_eq_matrix: OK

Memory test: OK 
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 1, name: sum_matrix

Test output:
Functional test output: False
Memory test output:
==158== Memcheck, a memory error detector
==158== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==158== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==158== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sum_matrix
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x1106CB: s21_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A2ED: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x1106CB: s21_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A740: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x1106DD: s21_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A740: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x10FC1B: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A891: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x10FC39: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A891: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x110419: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A8B5: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158== 
==158== Use of uninitialised value of size 8
==158==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A8B5: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158== 
==158== Invalid read of size 8
==158==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A8B5: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==  Address 0x170 is not stack'd, malloc'd or (recently) free'd
==158== 
==158== 
==158== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==158==  Access not within mapped region at address 0x170
==158==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10A8B5: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==    by 0x10F4FF: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==158==  If you believe this happened as a result of a stack
==158==  overflow in your program's main thread (unlikely but
==158==  possible), you can try to increase the size of the
==158==  main thread stack using the --main-stacksize= flag.
==158==  The main thread stack size used in this run was 8388608.
==158== 
==158== HEAP SUMMARY:
==158==     in use at exit: 0 bytes in 0 blocks
==158==   total heap usage: 4 allocs, 4 frees, 96 bytes allocated
==158== 
==158== All heap blocks were freed -- no leaks are possible
==158== 
==158== Use --track-origins=yes to see where uninitialised values come from
==158== For lists of detected and suppressed errors, rerun with: -s
==158== ERROR SUMMARY: 8 errors from 8 contexts (suppressed: 0 from 0)

Test result for the function s21_sum_matrix: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 2, name: sub_matrix

Test output:
Functional test output: False
Memory test output:
==164== Memcheck, a memory error detector
==164== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==164== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==164== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sub_matrix
==164== 
==164== Conditional jump or move depends on uninitialised value(s)
==164==    at 0x1104FD: s21_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B046: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164== 
==164== Conditional jump or move depends on uninitialised value(s)
==164==    at 0x1104FD: s21_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B43D: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164== 
==164== Conditional jump or move depends on uninitialised value(s)
==164==    at 0x11050F: s21_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B43D: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164== 
==164== Conditional jump or move depends on uninitialised value(s)
==164==    at 0x10FC1B: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B5A6: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164== 
==164== Conditional jump or move depends on uninitialised value(s)
==164==    at 0x10FC39: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B5A6: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164== 
==164== Conditional jump or move depends on uninitialised value(s)
==164==    at 0x110419: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B5CA: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164== 
==164== Use of uninitialised value of size 8
==164==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B5CA: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164== 
==164== Invalid read of size 8
==164==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B5CA: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==  Address 0x170 is not stack'd, malloc'd or (recently) free'd
==164== 
==164== 
==164== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==164==  Access not within mapped region at address 0x170
==164==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10B5CA: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==    by 0x10F532: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==164==  If you believe this happened as a result of a stack
==164==  overflow in your program's main thread (unlikely but
==164==  possible), you can try to increase the size of the
==164==  main thread stack using the --main-stacksize= flag.
==164==  The main thread stack size used in this run was 8388608.
==164== 
==164== HEAP SUMMARY:
==164==     in use at exit: 0 bytes in 0 blocks
==164==   total heap usage: 4 allocs, 4 frees, 96 bytes allocated
==164== 
==164== All heap blocks were freed -- no leaks are possible
==164== 
==164== Use --track-origins=yes to see where uninitialised values come from
==164== For lists of detected and suppressed errors, rerun with: -s
==164== ERROR SUMMARY: 8 errors from 8 contexts (suppressed: 0 from 0)

Test result for the function s21_sub_matrix: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 3, name: mult_number

Test output:
Functional test output: False
Memory test output:
==170== Memcheck, a memory error detector
==170== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==170== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==170== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_number
==170== 
==170== Conditional jump or move depends on uninitialised value(s)
==170==    at 0x1102D1: s21_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10BBFE: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170== 
==170== Conditional jump or move depends on uninitialised value(s)
==170==    at 0x1102D1: s21_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10BF0C: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170== 
==170== Conditional jump or move depends on uninitialised value(s)
==170==    at 0x1102E3: s21_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10BF0C: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170== 
==170== Conditional jump or move depends on uninitialised value(s)
==170==    at 0x10FC1B: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10C05D: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170== 
==170== Conditional jump or move depends on uninitialised value(s)
==170==    at 0x10FC39: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10C05D: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170== 
==170== Conditional jump or move depends on uninitialised value(s)
==170==    at 0x110419: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10C081: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170== 
==170== Use of uninitialised value of size 8
==170==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10C081: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170== 
==170== Invalid read of size 8
==170==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10C081: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==  Address 0x1f8bfbff is not stack'd, malloc'd or (recently) free'd
==170== 
==170== 
==170== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==170==  Access not within mapped region at address 0x1F8BFBFF
==170==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10C081: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==    by 0x10F565: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==170==  If you believe this happened as a result of a stack
==170==  overflow in your program's main thread (unlikely but
==170==  possible), you can try to increase the size of the
==170==  main thread stack using the --main-stacksize= flag.
==170==  The main thread stack size used in this run was 8388608.
==170== 
==170== HEAP SUMMARY:
==170==     in use at exit: 0 bytes in 0 blocks
==170==   total heap usage: 4 allocs, 4 frees, 96 bytes allocated
==170== 
==170== All heap blocks were freed -- no leaks are possible
==170== 
==170== Use --track-origins=yes to see where uninitialised values come from
==170== For lists of detected and suppressed errors, rerun with: -s
==170== ERROR SUMMARY: 8 errors from 8 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_number: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 4, name: mult_matrix

Test output:
Functional test output: True
Memory test output:
==176== Memcheck, a memory error detector
==176== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==176== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==176== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_matrix
==176== 
==176== 
==176== HEAP SUMMARY:
==176==     in use at exit: 0 bytes in 0 blocks
==176==   total heap usage: 10 allocs, 10 frees, 208 bytes allocated
==176== 
==176== All heap blocks were freed -- no leaks are possible
==176== 
==176== For lists of detected and suppressed errors, rerun with: -s
==176== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_matrix: OK

Memory test: OK 
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 5, name: transpose

Test output:
Functional test output: False
Memory test output:
==182== Memcheck, a memory error detector
==182== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==182== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==182== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test transpose
==182== 
==182== Conditional jump or move depends on uninitialised value(s)
==182==    at 0x11083E: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D26D: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182== 
==182== Conditional jump or move depends on uninitialised value(s)
==182==    at 0x11083E: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D56F: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182== 
==182== Conditional jump or move depends on uninitialised value(s)
==182==    at 0x110850: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D56F: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182== 
==182== Conditional jump or move depends on uninitialised value(s)
==182==    at 0x10FC1B: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D6D8: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182== 
==182== Conditional jump or move depends on uninitialised value(s)
==182==    at 0x10FC39: s21_eq_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D6D8: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182== 
==182== Conditional jump or move depends on uninitialised value(s)
==182==    at 0x110419: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D6FC: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182== 
==182== Use of uninitialised value of size 8
==182==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D6FC: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182== 
==182== Invalid read of size 8
==182==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D6FC: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==  Address 0x1f8bfbff is not stack'd, malloc'd or (recently) free'd
==182== 
==182== 
==182== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==182==  Access not within mapped region at address 0x1F8BFBFF
==182==    at 0x1103E4: s21_remove_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10D6FC: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==    by 0x10F5CB: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==182==  If you believe this happened as a result of a stack
==182==  overflow in your program's main thread (unlikely but
==182==  possible), you can try to increase the size of the
==182==  main thread stack using the --main-stacksize= flag.
==182==  The main thread stack size used in this run was 8388608.
==182== 
==182== HEAP SUMMARY:
==182==     in use at exit: 0 bytes in 0 blocks
==182==   total heap usage: 4 allocs, 4 frees, 96 bytes allocated
==182== 
==182== All heap blocks were freed -- no leaks are possible
==182== 
==182== Use --track-origins=yes to see where uninitialised values come from
==182== For lists of detected and suppressed errors, rerun with: -s
==182== ERROR SUMMARY: 8 errors from 8 contexts (suppressed: 0 from 0)

Test result for the function s21_transpose: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 6, name: calc_complements

Test output:
Functional test output: True
Memory test output:
==188== Memcheck, a memory error detector
==188== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==188== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==188== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test calc_complements
==188== 
==188== 
==188== HEAP SUMMARY:
==188==     in use at exit: 0 bytes in 0 blocks
==188==   total heap usage: 483 allocs, 483 frees, 6,464 bytes allocated
==188== 
==188== All heap blocks were freed -- no leaks are possible
==188== 
==188== For lists of detected and suppressed errors, rerun with: -s
==188== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_calc_complements: OK

Memory test: OK 
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 7, name: determinant

Test output:
Functional test output: True
Memory test output:
==194== Memcheck, a memory error detector
==194== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==194== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==194== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test determinant
==194== 
==194== 
==194== HEAP SUMMARY:
==194==     in use at exit: 0 bytes in 0 blocks
==194==   total heap usage: 121 allocs, 121 frees, 1,584 bytes allocated
==194== 
==194== All heap blocks were freed -- no leaks are possible
==194== 
==194== For lists of detected and suppressed errors, rerun with: -s
==194== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_determinant: OK

Memory test: OK 
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 8, name: inverse_matrix

Test output:
Functional test output: True
Memory test output:
==200== Memcheck, a memory error detector
==200== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==200== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==200== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test inverse_matrix
==200== 
==200== 
==200== HEAP SUMMARY:
==200==     in use at exit: 0 bytes in 0 blocks
==200==   total heap usage: 632 allocs, 632 frees, 8,688 bytes allocated
==200== 
==200== All heap blocks were freed -- no leaks are possible
==200== 
==200== For lists of detected and suppressed errors, rerun with: -s
==200== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_inverse_matrix: OK

Memory test: OK 
1
Test result: 1
-------------------------------------------------------------------------------


